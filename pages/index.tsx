import Head from 'next/head';
import { Montserrat } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import classNames from 'classnames';
import ItemList from '@/components/ItemList/ItemList';
import { useAppDispatch, useAppSelector } from '@/hooks/redux';
import { useGetItemsQuery } from '@/API/itemsService';
import { useEffect } from 'react';
import { itemsSlice } from '@/store/reducers/ItemsSlice';
import { getPageCount } from '@/utils/pages';
import Search from '@/components/Search/Search';
import LimitHandler from '@/components/SelectLimit/LimitHandler';

const montserrat = Montserrat({ subsets: ['latin'] });

export default function Home(): JSX.Element {
  const dispatch = useAppDispatch();
  const { searchQuery, limit, page } = useAppSelector((state) => state.itemsReducer);
  const { data, isItemsLoading, isItemsFetching, isItemsSuccess } = useGetItemsQuery(
    {
      searchStr: searchQuery,
      page: page,
      limit: limit,
    },
    {
      selectFromResult: ({ data, isLoading, isFetching, isError, isSuccess }) => ({
        data: data,
        isItemsLoading: isLoading,
        isItemsFetching: isFetching,
        isItemsError: isError,
        isItemsSuccess: isSuccess,
      }),
    }
  );

  useEffect(() => {
    if (isItemsSuccess) {
      dispatch(
        itemsSlice.actions.allItemsFetching({
          payloadItems: data.docs,
          payloadTotalPages: getPageCount(data.total, limit),
          payloadIsAllItemsLoading: false,
        })
      );
    }
  }, [data, isItemsLoading, isItemsFetching, isItemsSuccess]);
  return (
    <>
      <Head>
        <title>Week 5 - NextJS</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className={classNames(styles.main, montserrat.className)}>
        <LimitHandler />
        <Search
          getSearch={(value) => {
            localStorage.setItem('query', value);
          }}
        />
        <ItemList />
      </main>
    </>
  );
}
